{"componentChunkName":"component---src-templates-blog-post-js","path":"/ternary-operator/","result":{"data":{"site":{"siteMetadata":{"title":"e v m","author":"Emil Martinov","siteUrl":"https://www.emilmartinov.com"}},"mdx":{"id":"281d0194-1118-55e4-959e-5754f61c4655","excerpt":"The second console log will throw, as you can see from syntax highlighting, the a statement inside a template literal is not valid syntax. Javascript does notâ€¦","frontmatter":{"title":"Ternary Operator","date":"August 11, 2020"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, /*#__PURE__*/React.createElement(\"h2\", null, `Ternary Operator`), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `if`), ` in javascript is a statement, it is called `, /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `if statement`), `. It allows us to control the flow. Ternary operator on the other hand is an expression, it allows us to get a value based on a condition. So it is guaranteed to return a right hand side value. There are some places where you can only use expressions, like in string literals. This is commonly used in React components to conditionally apply one class or the other to a component. `), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, `function isAdult(age) {\n  if (age > 18) {\n    return 'can';\n  } else {\n    return \"can't\";\n  }\n}\nconsole.log(\\`The user \\${isAdult(32)} drive\\`);\nconsole.log(\\`The user \\${\n    if (32 > 18) {\n        return 'can';\n    } else {\n        return \"can't\";\n    }\n  } drive\\`)\n`)), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The second console log will throw, as you can see from syntax highlighting, the a statement inside a template literal is not valid syntax. Javascript does not know what do with it. You can return from a function but not an if statement. So if controls the flow, but it can not return a value.`), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `We can also use ternary operator to return an expression;`), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `condition ? if the condition is true output this : if not output this`)), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `So we are asking ? to check the condition and we give it to possible outcomes, first for the true case : then for the false.`), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, `const age = 32;\nconsole.log(\\`The user \\${age > 18 ? 'can' : \"can't\"} drive.\\`);\n`)), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Instead of writing a function with an if statement then returning the function, we can easily write it in one line and return the value.`), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Remember we are asking ? if the condition is true or false, then we provide a return value for true : or if not we provide value for false. True comes first as we care about truth more.`), /*#__PURE__*/React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"590px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"56.08108108108109%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n      },\n      alt: \"The truth is out there\",\n      title: \"\",\n      src: \"/static/9c8f97c90f6af45ffa7357364918fd41/1c72d/truth-is-out-there.jpg\",\n      srcSet: \"/static/9c8f97c90f6af45ffa7357364918fd41/a80bd/truth-is-out-there.jpg 148w,\\n/static/9c8f97c90f6af45ffa7357364918fd41/1c91a/truth-is-out-there.jpg 295w,\\n/static/9c8f97c90f6af45ffa7357364918fd41/1c72d/truth-is-out-there.jpg 590w,\\n/static/9c8f97c90f6af45ffa7357364918fd41/a8a14/truth-is-out-there.jpg 885w,\\n/static/9c8f97c90f6af45ffa7357364918fd41/fbd2c/truth-is-out-there.jpg 1180w,\\n/static/9c8f97c90f6af45ffa7357364918fd41/0f98f/truth-is-out-there.jpg 1920w\",\n      sizes: \"(max-width: 590px) 100vw, 590px\"\n    })))));\n  }\n\n}"}}},"pageContext":{"slug":"/ternary-operator/","previous":{"id":"61b79d87-fb4e-5aa7-bc68-8719553dd074","fields":{"slug":"/stack-vs-heap/"},"frontmatter":{"title":"Stack vs Heap"},"code":{"scope":""}},"next":{"id":"8aefcad1-fdd9-5c7f-8cb7-7da1385f94ed","fields":{"slug":"/string-and-string-template-literal/"},"frontmatter":{"title":"String Literal and String Template Literal"},"code":{"scope":""}}}},"staticQueryHashes":["3128451518","3132601055"]}