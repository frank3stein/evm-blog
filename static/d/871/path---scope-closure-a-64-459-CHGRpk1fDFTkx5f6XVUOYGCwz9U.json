{"data":{"site":{"siteMetadata":{"title":"e v m","author":"Emil Martinov"}},"mdx":{"id":"e4438c73-f524-523c-b690-1a62dbb297b6","excerpt":"Let us talk about scope first.\nScope is a mechanism in computer science to hide level of detail and localize it. What does this mean exactly ? Let's look at an…","frontmatter":{"title":"Scope && Closure","date":"March 16, 2019"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Let us talk about scope first.\nScope is a mechanism in computer science to hide level of detail and localize it. What does this mean exactly ? Let’s look at an example.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, `const firstName = 'Emil' // variable declaration\nconst lastName = 'Martinov' // variable declaration\nfunction myFullName(firstName, lastName) {\n  // function declaration and the parameters, firstName and lastName\n  return firstName + lastName // returning the arguments\n}\nconsole.log(myFullName()) //logging the return of myFullName\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `When I first saw code like this the first time, it was very confusing for me, seeing firstName here, firstName there and the last line. I just couldn’t process the flow of the program and what each denoted without actively thinking about it.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `From mathematics background I could guess that functions is a placeholder for instructions, that values firstName, lastName are placeholders for what we might put into that function so that the function follows the recipe inside.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `So let’s look at the interesting parts for scope. We define our variables firstName and lastName. Then we declare our function `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `myFullName`), `. Inside the paranthesis `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `()`), `, we are creating placeholders `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `firstName`), ` and `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `lastName`), `, these placeholders only exist inside our function. Outside they do not exist. Think of the function declaration as a cooking recipe, and the placeholders, parameters in programming language, are our ingredients. After we tell the function its instruction `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `return firstName + lastName`), `, we are done with our recipe so we close `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `}`), ` the curly bracket. Now we just finished writing the recipe, but we have not done anything with it. So at this time it is just a piece of paper with some instructions.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, ``)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Think of a google maps. If we think of zoom as a scope,`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(\"a\", {\n      className: \"gatsby-resp-image-link\",\n      href: \"/static/af59e57cf45cb0b58fea7aa885a26b5c/82472/scope.jpg\",\n      style: {\n        \"display\": \"block\"\n      },\n      target: \"_blank\",\n      rel: \"noopener\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"590px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"52.5%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }, React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n      },\n      alt: \"Scope\",\n      title: \"\",\n      src: \"/static/af59e57cf45cb0b58fea7aa885a26b5c/c739e/scope.jpg\",\n      srcSet: \"/static/af59e57cf45cb0b58fea7aa885a26b5c/8ee9c/scope.jpg 148w,\\n/static/af59e57cf45cb0b58fea7aa885a26b5c/ebbe7/scope.jpg 295w,\\n/static/af59e57cf45cb0b58fea7aa885a26b5c/c739e/scope.jpg 590w,\\n/static/af59e57cf45cb0b58fea7aa885a26b5c/82472/scope.jpg 600w\",\n      sizes: \"(max-width: 590px) 100vw, 590px\"\n    }))))), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `this is our global scope.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(\"a\", {\n      className: \"gatsby-resp-image-link\",\n      href: \"/static/7ec34bb4273431a224e5fd0b57a2c35f/a987b/global.png\",\n      style: {\n        \"display\": \"block\"\n      },\n      target: \"_blank\",\n      rel: \"noopener\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"590px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"49.42708333333333%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }, React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n      },\n      alt: \"Global\",\n      title: \"\",\n      src: \"/static/7ec34bb4273431a224e5fd0b57a2c35f/b9e4f/global.png\",\n      srcSet: \"/static/7ec34bb4273431a224e5fd0b57a2c35f/cf440/global.png 148w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/d2d38/global.png 295w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/b9e4f/global.png 590w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/f9b6a/global.png 885w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/2d849/global.png 1180w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/bbefa/global.png 1770w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/a987b/global.png 1920w\",\n      sizes: \"(max-width: 590px) 100vw, 590px\"\n    }))))), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `When we are running our javascript in the browser, it is running at the global scope. At that level there can be countries`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `If you search on google maps for Turkey, the result will zoom in from the global view to where you can see Turkey as whole. It does not show you other countries, just Turkey.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(\"a\", {\n      className: \"gatsby-resp-image-link\",\n      href: \"/static/9ec6f8e2ee656aec323408d89006c079/a987b/turkey.png\",\n      style: {\n        \"display\": \"block\"\n      },\n      target: \"_blank\",\n      rel: \"noopener\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"590px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"46.875%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }, React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n      },\n      alt: \"Turkey\",\n      title: \"\",\n      src: \"/static/9ec6f8e2ee656aec323408d89006c079/b9e4f/turkey.png\",\n      srcSet: \"/static/9ec6f8e2ee656aec323408d89006c079/cf440/turkey.png 148w,\\n/static/9ec6f8e2ee656aec323408d89006c079/d2d38/turkey.png 295w,\\n/static/9ec6f8e2ee656aec323408d89006c079/b9e4f/turkey.png 590w,\\n/static/9ec6f8e2ee656aec323408d89006c079/f9b6a/turkey.png 885w,\\n/static/9ec6f8e2ee656aec323408d89006c079/2d849/turkey.png 1180w,\\n/static/9ec6f8e2ee656aec323408d89006c079/bbefa/turkey.png 1770w,\\n/static/9ec6f8e2ee656aec323408d89006c079/a987b/turkey.png 1920w\",\n      sizes: \"(max-width: 590px) 100vw, 590px\"\n    }))))), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Additionally you will see that you can also see the names of the cities. Only the big ones. The map shows you the information that it thinks is relevant.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Lets zoom in to the map, for example to Istanbul. Suddenly we start to see the names of the neighbourhoods, aveneues etc. The map already has information about all these places when you first searched for Turkey, but they are not relevant. Seeing all this information would pollute the view and will make it harder for you to locate what you are searching for.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(\"a\", {\n      className: \"gatsby-resp-image-link\",\n      href: \"/static/7ec34bb4273431a224e5fd0b57a2c35f/a987b/global.png\",\n      style: {\n        \"display\": \"block\"\n      },\n      target: \"_blank\",\n      rel: \"noopener\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"590px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"49.42708333333333%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }, React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n      },\n      alt: \"Global\",\n      title: \"\",\n      src: \"/static/7ec34bb4273431a224e5fd0b57a2c35f/b9e4f/global.png\",\n      srcSet: \"/static/7ec34bb4273431a224e5fd0b57a2c35f/cf440/global.png 148w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/d2d38/global.png 295w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/b9e4f/global.png 590w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/f9b6a/global.png 885w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/2d849/global.png 1180w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/bbefa/global.png 1770w,\\n/static/7ec34bb4273431a224e5fd0b57a2c35f/a987b/global.png 1920w\",\n      sizes: \"(max-width: 590px) 100vw, 590px\"\n    }))))), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Here is an image from google maps. When you zoom out the maximum amount, it only shows the country names. This is exactly how the javascript global scope works, done. Thanks for reading.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `I am kidding, we barely started. If we think of the zoom of the map as scope, each zoom has its own scope. At the global scope, we see only the countries.`));\n  }\n\n}"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/scope-&&-closure/","previous":{"id":"8539e5d0-224a-5a85-9421-d882e366c53e","fields":{"slug":"/first-post/"},"frontmatter":{"title":"First post"},"code":{"scope":""}},"next":{"id":"3b6ec9b2-16e8-5157-ab98-237576c07762","fields":{"slug":"/functions/"},"frontmatter":{"title":"Functions"},"code":{"scope":""}}}}